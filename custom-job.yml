apiVersion: automation.cloudbees.io/v1alpha1
kind: CustomJob
name: manual approval
description: Request manual approval from users and teams

inputs:
  approvers:
    description: Comma separated list of approvers. Can be users or teams. If not specified, then all users who have execute permission for approval on the workflow can approve.
    required: false
  instruction:
    description: Text to display in the approval prompt
    required: false
  disallowLaunchByUser:
    description: For separation of responsibilities, if true, then the user who launched the workflow is not allowed to approve.
    required: false
  debug:
    description: Set to true to enable debug logging.
    default: false
    required: false

handlers:
  init:
    uses: docker://esolang/jq:latest
    command: /bin/sh
    args: |
      -c """
      if [ "x$DEBUG" == "xtrue" ]; 
      then
        echo \"DEBUG: `date` - Inside init handler\"
      fi
      # Manual approval template
      TEMPLATE='{\"approvers\": ($a | split(\",\")), \"disallowLaunchByUser\": $d}'
      if [ -n \"$INSTRUCTION\" ]; 
      then
        TEMPLATE='{\"approvers\": ($a | split(\",\")), \"instruction\": $i, \"disallowLaunchByUser\": $d}'
      fi

      # Build valid JSON
      JSON_PAYLOAD=$(/usr/bin/jq -n --arg a \"$APPROVERS\" --arg i \"$INSTRUCTION\" --argjson d \"${DISALLOW_LAUNCHED_BY_USER:-false}\" \"$TEMPLATE\")

      # To avoid issue 'argument list too long' use file
      echo \"$JSON_PAYLOAD\" > /tmp/content.json

      # Make Platform API call
      response=$(wget -S -O - -T 60 --header \"Authorization: Bearer ${API_TOKEN}\" --header \"Content-Type: application/json\" --header \"Accept: application/json\" --post-file \"/tmp/content.json\" \"$URL/v1/workflows/approval\") || command_failed=1

      # Check exit code
      if [ ${command_failed:-0} -eq 1 ];
      then
        echo \"ERROR: `date` - API call failed with error: '$response'\"
        
        # Save failure
        echo '{    
          \"status\": \"FAILED\",
          \"message\": \"Failed to initialize workflow manual approval with error: '$response'\"
        }' > $CLOUDBEES_STATUS
      
        exit 1
      fi

      # Save success
      if [ -z \"$APPROVERS\" ] || [ -z \"$response\" ]; 
      then
        echo 'Waiting for approval'
      else
        if [ "x$DEBUG" == "xtrue" ]; 
        then
          echo \"DEBUG: `date` - manual approval successfully created with response is $response\"
        fi
      
        # Parse notified approver user names from the response
        userNames=$(echo $response | /usr/bin/jq -r '.approvers | map(.userName) | join(\", \")' 2>/dev/null)

        if [ "x$DEBUG" == "xtrue" ]; 
        then
          echo \"DEBUG: `date` - approval user names list is $userNames\"
        fi
        
        echo 'Waiting for approval from one of the following: '$userNames
      fi

      if [ -n \"$INSTRUCTION\" ]; 
      then
        echo 'Instructions:'
        echo $INSTRUCTION
      fi
      
      echo '{    
        \"status\": \"PENDING_APPROVAL\",
        \"message\": \"Waiting for approval from approvers\" 
      }' > $CLOUDBEES_STATUS
      
      if [ "x$DEBUG" == "xtrue" ]; 
      then
        echo \"DEBUG: `date` - Done init handler\"
      fi
      """
    env:
      APPROVERS: ${{inputs.approvers}}
      INSTRUCTION: ${{inputs.instruction}}
      DISALLOW_LAUNCHED_BY_USER: ${{inputs.disallowLaunchByUser}}
      API_TOKEN: ${{ cloudbees.api.token }}
      URL: ${{ cloudbees.api.url }}
      DEBUG: ${{ inputs.debug }}

  callback:
    uses: docker://esolang/jq:latest
    command: /bin/sh
    args: |
      -c """
      
      if [ "x$DEBUG" == "xtrue" ]; 
      then
        echo \"DEBUG: `date` - Inside callback handler\"
        echo \"DEBUG: `date` - Incoming payload: '$PAYLOAD'\"
      fi
      
      # Extract approved and comments fields from the payload in JSON format
      APPROVAL_STATUS=$(echo \"$PAYLOAD\" | /usr/bin/jq -r '.status')
      COMMENTS=$(echo \"$PAYLOAD\" | /usr/bin/jq -r '.comments')

      # To avoid issue 'argument list too long' use file
      echo \"$PAYLOAD\" > /tmp/content.json
      
      # Make Platform API call to change workflow manual approval status
      response=$(wget -S -O - -T 60 --header \"Authorization: Bearer ${API_TOKEN}\" --header \"Content-Type: application/json\" --header \"Accept: application/json\" --post-file \"/tmp/content.json\" \"$URL/v1/workflows/approval/status\") || command_failed=1
      
      # Check exit code
      if [ ${command_failed:-0} -eq 1 ];
      then
        echo \"ERROR: `date` - API call failed with error: '$response'\"

        # Save failure
        echo '{    
          \"status\": \"FAILED\",
          \"message\": \"Failed to change workflow manual approval status with error: '$response'\"
        }' > $CLOUDBEES_STATUS
      
        exit 1
      fi

      # Save success
      if [ "$APPROVAL_STATUS" == "UPDATE_MANUAL_APPROVAL_STATUS_APPROVED" ]; 
      then
        JOB_STATUS="APPROVED"
        echo 'Approval comments:'
      elif [ "$APPROVAL_STATUS" == "UPDATE_MANUAL_APPROVAL_STATUS_REJECTED" ];
      then
        JOB_STATUS="REJECTED"
        echo 'Rejection comments:'
      else
        echo \"ERROR: `date` - Unexpected approval status '$APPROVAL_STATUS'\"
        echo '{    
          \"status\": \"FAILED\",
          \"message\": \"Unexpected approval status encountered: '$APPROVAL_STATUS'\"
        }' > $CLOUDBEES_STATUS
      
        exit 1
      fi
      echo \"$COMMENTS\"
      
      echo '{    
        \"status\": '\\\"$JOB_STATUS\\\"',
        \"message\": \"Successfully changed workflow manual approval status\"
      }' > $CLOUDBEES_STATUS
      
      if [ "x$DEBUG" == "xtrue" ]; 
      then
        echo \"DEBUG: `date` - Done callback handler\"
      fi
      """
    env:
      API_TOKEN: ${{ cloudbees.api.token }}
      URL: ${{ cloudbees.api.url }}
      PAYLOAD: ${{ handler.payload }}
      DEBUG: ${{ inputs.debug }}

  cancel:
    uses: docker://alpine/curl:latest
    command: /bin/sh
    #to abort pending approval request in case of timeout or workflow abort event.
    args: |
      -c "
      if [ "x$DEBUG" == "xtrue" ]; 
      then
        echo \"DEBUG: `date` - Inside cancel handler\"
      fi
      # Make Platform API call to change workflow manual approval status
      response=$(curl -s --max-time 150 -w \"Exit code: %{exitcode} HTTP status: %{response_code} Error: %{errormsg}\" --fail-with-body  -X POST \"$URL/v1/workflows/approval/status\" -H \"Authorization: Bearer $API_TOKEN\" -H 'Content-Type: application/json' -d '{\"status\": \"$CANCELLATION_REASON\"}') || command_failed=1
      
      # Check curl exit code
      if [ ${command_failed:-0} -eq 1 ];
      then
        echo \"ERROR: `date` - API call failed with error: '$response'\"
      fi
      if [ "x$DEBUG" == "xtrue" ]; 
      then
        echo \"DEBUG: `date` - Done cancel handler\"
      fi
      "
    env:
      API_TOKEN: ${{ cloudbees.api.token }}
      URL: ${{ cloudbees.api.url }}
      CANCELLATION_REASON: ${{ handler.reason }}
      DEBUG: ${{ inputs.debug }}
